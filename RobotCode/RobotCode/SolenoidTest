#include <DigitalInput.h>
#include <DoubleSolenoid.h>
#include <Joystick.h>
#include <SampleRobot.h>
#include <Solenoid.h>
#include <Timer.h>

class Robot: public frc::SampleRobot {
public:
	/**
	 * Sets the solenoids from the position of joystick buttons.
	 */
	void OperatorControl() override {
		while (IsOperatorControl() && IsEnabled()) {
			/* The output of GetRawButton is true/false depending on whether
			 *   the button is pressed; Set takes a boolean for for whether to
			 *   use the default (false) channel or the other (true).
			 */

			/* In order to set the double solenoid, we will say that if neither
			 *   button is pressed, it is off, if just one button is pressed,
			 *   set the solenoid to correspond to that button, and if both
			 *   are pressed, set the solenoid to Forwards.
			 */
			if (stick.GetRawButton(2)) {
				BotSol.Set(frc::DoubleSolenoid::kForward);
			}
			if (stick.GetRawButton(3)) {
				BotSol.Set(frc::DoubleSolenoid::kReverse);
			}
			if(Sensor.Get()) {
				BotSol.Set(frc::DoubleSolenoid::kOff);
			}

		}
	}

private:

	frc::DoubleSolenoid BotSol { 7, 5 };
	frc::DoubleSolenoid UpSol { 6, 4 };
	frc::DigitalInput Sensor {1};

	frc::Joystick stick { 0 };

	static constexpr double kUpdatePeriod = 0.005;

	static constexpr int kDoubleSolenoidForward = 2;
	static constexpr int kDoubleSolenoidReverse = 3;

};

START_ROBOT_CLASS(Robot)
